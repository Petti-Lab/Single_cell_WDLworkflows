include required(classpath("application"))
backend {
  default = "LSF"
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
        Int cpu = 1
        Int memory_mb = 644096
        String? docker
        """
        submit-docker = """
        LSF_DOCKER_VOLUMES='${cwd}:${docker_cwd} /scratch1/fs1/allegra.petti/:/scratch1/fs1/allegra.petti/ /storage1/fs1/bga/Active/shared:/storage1/fs1/bga/Active/shared /storage1/fs1/allegra.petti/Active:/storage1/fs1/allegra.petti/Active/ /storage1/fs1/bga/Active:/storage1/fs1/bga/Active' \
        LSF_DOCKER_PRESERVE_ENVIRONMENT=false \
        bsub \
        -J ${job_name} \
        -cwd ${cwd} \
        -o /dev/null \
        -e cromwell-workflow-logs/cromwell-%J.err \
        -q 'general' \
        -g '/khan.saad/gms_runs' \
        -G 'compute-allegra.petti' \
        -a "docker(${docker})" \
        -M ${memory_mb}M \
        -n ${cpu} \
        -R "span[hosts=1] select[mem>${memory_mb}M] rusage[mem=${memory_mb}M]" \
        /bin/bash ${script}
        """
        kill = "bkill ${job_id}"
        docker-kill = "bkill ${job_id}"
        check-alive = "bjobs -noheader -o stat ${job_id} | /bin/grep 'PEND\\|RUN'"
        job-id-regex = "Job <(\\d+)>.*"
      }
    }
  }
}
