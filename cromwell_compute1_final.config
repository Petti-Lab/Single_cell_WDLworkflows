include required(classpath("application"))
backend {
  default = "LSF"
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
        Int maxRetries = 5
        Int cpu = 1
        Int memory_kb = 4096000
        Int memory_mb = 4096
        String? docker
        """
        submit = """
	LSF_DOCKER_VOLUMES="/storage1/fs1/bga/Active/gmsroot:/gscmnt /scratch1/fs1/allegra.petti/:/scratch1/fs1/allegra.petti/ /storage1/fs1/allegra.petti/Active/:/storage1/fs1/allegra.petti/Active/ /storage1/fs1/alberthkim/Active/:/storage1/fs1/alberthkim/Active/" \
        LSF_DOCKER_PRESERVE_ENVIRONMENT=false \
        bsub \
        -J ${job_name} \
        -cwd ${cwd} \
        -o /dev/null \
        -e /scratch1/fs1/allegra.petti/khan.saad/WDL_workflow/Single_cell_WDLworkflows/cromwell-workflow-logs/cromwell-%J.err \
        -M ${memory_mb} \
        -n ${cpu} \
        -R "select[mem>${memory_mb}] rusage[mem=${memory_mb}] span[hosts=1]" \
        /bin/sh ${script}
        """
        submit-docker = """
        LSF_DOCKER_VOLUMES="/storage1/fs1/bga/Active/gmsroot:/gscmnt /scratch1/fs1/allegra.petti/:/scratch1/fs1/allegra.petti/ /storage1/fs1/allegra.petti/Active/:/storage1/fs1/allegra.petti/Active/ /storage1/fs1/alberthkim/Active/:/storage1/fs1/alberthkim/Active/ ${cwd}:${docker_cwd}" \
        LSF_DOCKER_PRESERVE_ENVIRONMENT=false \
        bsub \
        -G compute-allegra.petti \
        -J ${job_name} \
        -cwd ${cwd} \
        -o /dev/null \
        -e /scratch1/fs1/allegra.petti/khan.saad/WDL_workflow/Single_cell_WDLworkflows/cromwell-workflow-logs/cromwell-%J.err \
        -a "docker(${docker})" \
        -g /allegrapetti-gms \
        -q general \
        -M ${memory_mb} \
        -n ${cpu} \
        -R "select[mem>${memory_mb}] rusage[mem=${memory_mb}] span[hosts=1]" \
        /bin/sh ${script}
        """
        kill = "bkill ${job_id}"
        docker-kill = "bkill ${job_id}"
        docker_kill = "bkill ${job_id}"
        check-alive = "bjobs -noheader -o stat ${job_id} | /bin/grep 'PEND\\|RUN'"
        job-id-regex = "Job <(\\d+)>.*"
        root = "/storage1/fs1/allegra.petti/Active/Users/khan.saad/WDL_pipelines/"
      }
    }
  }
}
workflow-options {
  workflow-log-dir = "/scratch1/fs1/allegra.petti/khan.saad/WDL_workflow/Single_cell_WDLworkflows/cromwell-workflow-logs/"
}
